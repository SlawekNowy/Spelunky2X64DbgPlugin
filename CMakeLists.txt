# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Variables
set(X64DBG_PLUGINS_ROOT)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

include("cmake/msvc-static-runtime.cmake")
include("cmake/msvc-configurations.cmake")

project(Spelunky2)

include("cmake/Qt5Helpers.cmake")

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
message(STATUS "Fetching x64dbg...")
FetchContent_Declare(x64dbg
	URL
		"https://sourceforge.net/projects/x64dbg/files/snapshots/snapshot_2023-06-10_18-05.zip"
	URL_HASH
		SHA1=04468bd61fb36d6b10d17f342f03ef12f5b2ce62
)
FetchContent_MakeAvailable(x64dbg)

include("cmake/x64dbg.cmake")

# Packages
find_package(Qt5 REQUIRED
	COMPONENTS
		Core
		Widgets
)

# Subdirectory: 3rdparty/json
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/3rdparty/json")
else()
	set(CMAKE_FOLDER "3rdparty/json")
endif()
add_subdirectory("3rdparty/json")
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target: Spelunky2
set(CMKR_TARGET Spelunky2)
if(QT_NAMESPACE)
    add_definitions(-DQT_NAMESPACE=${QT_NAMESPACE})
endif()

set(Spelunky2_SOURCES
	"src/Configuration.cpp"
	"src/Data/CPPGenerator.cpp"
	"src/Data/CharacterDB.cpp"
	"src/Data/Entity.cpp"
	"src/Data/EntityDB.cpp"
	"src/Data/EntityList.cpp"
	"src/Data/GameManager.cpp"
	"src/Data/IDNameList.cpp"
	"src/Data/JournalPage.cpp"
	"src/Data/LevelGen.cpp"
	"src/Data/Logger.cpp"
	"src/Data/MemoryMappedData.cpp"
	"src/Data/Online.cpp"
	"src/Data/ParticleDB.cpp"
	"src/Data/ParticleEmittersList.cpp"
	"src/Data/SaveGame.cpp"
	"src/Data/State.cpp"
	"src/Data/StringsTable.cpp"
	"src/Data/TextureDB.cpp"
	"src/Data/VirtualTableLookup.cpp"
	"src/QtHelpers/CPPSyntaxHighlighter.cpp"
	"src/QtHelpers/DialogEditSimpleValue.cpp"
	"src/QtHelpers/DialogEditState.cpp"
	"src/QtHelpers/ItemModelGatherVirtualData.cpp"
	"src/QtHelpers/ItemModelLoggerFields.cpp"
	"src/QtHelpers/ItemModelLoggerSamples.cpp"
	"src/QtHelpers/ItemModelStates.cpp"
	"src/QtHelpers/ItemModelStringsTable.cpp"
	"src/QtHelpers/ItemModelVirtualFunctions.cpp"
	"src/QtHelpers/ItemModelVirtualTable.cpp"
	"src/QtHelpers/StyledItemDelegateColorPicker.cpp"
	"src/QtHelpers/StyledItemDelegateHTML.cpp"
	"src/QtHelpers/TableViewLogger.cpp"
	"src/QtHelpers/TableWidgetItemNumeric.cpp"
	"src/QtHelpers/TreeViewMemoryFields.cpp"
	"src/QtHelpers/TreeWidgetItemNumeric.cpp"
	"src/QtHelpers/WidgetMemoryView.cpp"
	"src/QtHelpers/WidgetSamplesPlot.cpp"
	"src/QtHelpers/WidgetSampling.cpp"
	"src/QtHelpers/WidgetSpelunkyLevel.cpp"
	"src/QtHelpers/WidgetSpelunkyRooms.cpp"
	"src/QtPlugin.cpp"
	"src/Spelunky2.cpp"
	"src/Views/ViewCharacterDB.cpp"
	"src/Views/ViewEntities.cpp"
	"src/Views/ViewEntity.cpp"
	"src/Views/ViewEntityDB.cpp"
	"src/Views/ViewGameManager.cpp"
	"src/Views/ViewJournalPage.cpp"
	"src/Views/ViewLevelGen.cpp"
	"src/Views/ViewLogger.cpp"
	"src/Views/ViewOnline.cpp"
	"src/Views/ViewParticleDB.cpp"
	"src/Views/ViewSaveGame.cpp"
	"src/Views/ViewState.cpp"
	"src/Views/ViewStdMap.cpp"
	"src/Views/ViewStdVector.cpp"
	"src/Views/ViewStringsTable.cpp"
	"src/Views/ViewTextureDB.cpp"
	"src/Views/ViewThreads.cpp"
	"src/Views/ViewToolbar.cpp"
	"src/Views/ViewVirtualFunctions.cpp"
	"src/Views/ViewVirtualTable.cpp"
	"src/pluginmain.cpp"
	"src/Configuration.h"
	"src/Data/CPPGenerator.h"
	"src/Data/CharacterDB.h"
	"src/Data/Entity.h"
	"src/Data/EntityDB.h"
	"src/Data/EntityList.h"
	"src/Data/GameManager.h"
	"src/Data/IDNameList.h"
	"src/Data/JournalPage.h"
	"src/Data/LevelGen.h"
	"src/Data/Logger.h"
	"src/Data/MemoryMappedData.h"
	"src/Data/Online.h"
	"src/Data/ParticleDB.h"
	"src/Data/ParticleEmittersList.h"
	"src/Data/SaveGame.h"
	"src/Data/State.h"
	"src/Data/StdString.h"
	"src/Data/StringsTable.h"
	"src/Data/TextureDB.h"
	"src/Data/VirtualTableLookup.h"
	"src/QtHelpers/CPPSyntaxHighlighter.h"
	"src/QtHelpers/DialogEditSimpleValue.h"
	"src/QtHelpers/DialogEditState.h"
	"src/QtHelpers/ItemModelGatherVirtualData.h"
	"src/QtHelpers/ItemModelLoggerFields.h"
	"src/QtHelpers/ItemModelLoggerSamples.h"
	"src/QtHelpers/ItemModelStates.h"
	"src/QtHelpers/ItemModelStringsTable.h"
	"src/QtHelpers/ItemModelVirtualFunctions.h"
	"src/QtHelpers/ItemModelVirtualTable.h"
	"src/QtHelpers/StyledItemDelegateColorPicker.h"
	"src/QtHelpers/StyledItemDelegateHTML.h"
	"src/QtHelpers/TableViewLogger.h"
	"src/QtHelpers/TableWidgetItemNumeric.h"
	"src/QtHelpers/TreeViewMemoryFields.h"
	"src/QtHelpers/TreeWidgetItemNumeric.h"
	"src/QtHelpers/WidgetMemoryView.h"
	"src/QtHelpers/WidgetSamplesPlot.h"
	"src/QtHelpers/WidgetSampling.h"
	"src/QtHelpers/WidgetSpelunkyLevel.h"
	"src/QtHelpers/WidgetSpelunkyRooms.h"
	"src/QtPlugin.h"
	"src/Spelunky2.h"
	"src/Views/ViewCharacterDB.h"
	"src/Views/ViewEntities.h"
	"src/Views/ViewEntity.h"
	"src/Views/ViewEntityDB.h"
	"src/Views/ViewGameManager.h"
	"src/Views/ViewJournalPage.h"
	"src/Views/ViewLevelGen.h"
	"src/Views/ViewLogger.h"
	"src/Views/ViewOnline.h"
	"src/Views/ViewParticleDB.h"
	"src/Views/ViewSaveGame.h"
	"src/Views/ViewState.h"
	"src/Views/ViewStdMap.h"
	"src/Views/ViewStdVector.h"
	"src/Views/ViewStringsTable.h"
	"src/Views/ViewTextureDB.h"
	"src/Views/ViewThreads.h"
	"src/Views/ViewToolbar.h"
	"src/Views/ViewVirtualFunctions.h"
	"src/Views/ViewVirtualTable.h"
	"src/pluginmain.h"
	cmake.toml
)

x64dbg_plugin(Spelunky2)

target_sources(Spelunky2 PRIVATE ${Spelunky2_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${Spelunky2_SOURCES})

target_compile_definitions(Spelunky2 PRIVATE
	NOMINMAX
	WIN32_LEAN_AND_MEAN
	_ITERATOR_DEBUG_LEVEL=0
)

target_include_directories(Spelunky2 PRIVATE
	"3rdparty/json/single_include"
	src
)

target_link_libraries(Spelunky2 PRIVATE
	Qt5::Core
	Qt5::Widgets
	nlohmann_json
)

set_target_properties(Spelunky2 PROPERTIES
	CXX_STANDARD
		17
)

# Enable Qt moc/rrc/uic support
target_qt(${CMKR_TARGET})

#TODO: This should be hooked to install target. Wait until cmkr stabilizes it.
# Set the plugin as the startup project
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})

# Copy the plugin to the x64dbg plugins folder
add_custom_command(	TARGET ${PROJECT_NAME} 
					POST_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy_if_different" "${CMAKE_CURRENT_BINARY_DIR}/Release/Spelunky2.dp64" ${X64DBG_PLUGINS_ROOT})

# Copy Spelunky2.json to the x64dbg plugins folder
add_custom_target(deploy-auxfiles)
add_custom_command(	TARGET deploy-auxfiles 
					POST_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy" "${CMAKE_CURRENT_SOURCE_DIR}/resources/Spelunky2.json" ${X64DBG_PLUGINS_ROOT})

# Copy Spelunky2Entities.txt to the x64dbg plugins folder
add_custom_command(	TARGET deploy-auxfiles
					PRE_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy" "${CMAKE_CURRENT_SOURCE_DIR}/resources/Spelunky2Entities.txt" ${X64DBG_PLUGINS_ROOT})

# Copy Spelunky2ParticleEmitters.txt to the x64dbg plugins folder
add_custom_command(	TARGET deploy-auxfiles
					PRE_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy" "${CMAKE_CURRENT_SOURCE_DIR}/resources/Spelunky2ParticleEmitters.txt" ${X64DBG_PLUGINS_ROOT})

# Copy Spelunky2RoomCodes.json to the x64dbg plugins folder
add_custom_command(	TARGET deploy-auxfiles
					PRE_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy" "${CMAKE_CURRENT_SOURCE_DIR}/resources/Spelunky2RoomCodes.json" ${X64DBG_PLUGINS_ROOT})

# Copy Spelunky2VirtualTableData.json to the x64dbg plugins folder
add_custom_command(	TARGET deploy-auxfiles
					PRE_BUILD
					COMMAND  ${CMAKE_COMMAND} -E "copy" "${CMAKE_CURRENT_SOURCE_DIR}/resources/Spelunky2VirtualTableData.json" ${X64DBG_PLUGINS_ROOT})

add_dependencies(${PROJECT_NAME} deploy-auxfiles)

